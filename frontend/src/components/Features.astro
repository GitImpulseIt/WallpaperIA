---
import { getTranslation } from '../i18n';

const { lang } = Astro.props;
const t = getTranslation(lang);

const features = [
  {
    icon: 'infinity',
    title: t.features.feature1.title,
    description: t.features.feature1.description
  },
  {
    icon: 'calendar',
    title: t.features.feature2.title,
    description: t.features.feature2.description
  },
  {
    icon: 'grid',
    title: t.features.feature3.title,
    description: t.features.feature3.description
  },
  {
    icon: 'monitor',
    title: t.features.feature4.title,
    description: t.features.feature4.description
  },
  {
    icon: 'heart',
    title: t.features.feature5.title,
    description: t.features.feature5.description
  },
  {
    icon: 'zap',
    title: t.features.feature6.title,
    description: t.features.feature6.description
  }
];

const screenshots = [
  '/img/screen-en-1.jpg',
  '/img/screen-en-2.jpg',
  '/img/screen-en-3.jpg'
];
---

<section class="features" id="features">
  <!-- Screenshots Section -->
  <div class="screenshots-section">
    <div class="container">
      <h2 class="section-title">{t.screenshots.title}</h2>
      <p class="section-subtitle">{t.screenshots.subtitle}</p>

      <figure class="screenshots-carousel-3d">
        <div class="screenshots-carousel-3d__content" id="screenshotsCarousel3D">
          {screenshots.map((screenshot, index) => (
            <div class="screenshots-carousel-3d__item" data-index={index}>
              <img src={screenshot} alt={`Screenshot ${index + 1}`} />
            </div>
          ))}
        </div>
      </figure>

      <!-- Modal plein écran pour screenshots -->
      <div class="screenshot-fullscreen-modal" id="screenshotFullscreenModal">
        <div class="screenshot-fullscreen-close" id="screenshotCloseBtn">×</div>
        <img src="" alt="" id="screenshotFullscreenImage" />
      </div>
    </div>
  </div>

  <!-- Features Grid -->
  <div class="features-section">
    <div class="container">
      <h2 class="section-title">{t.features.title}</h2>
      <p class="section-subtitle">{t.features.subtitle}</p>

      <div class="features-grid">
        {features.map((feature) => (
          <div class="feature-card">
            <div class="feature-icon">
              {feature.icon === 'infinity' && (
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M18.178 8c1.414 0 2.822.5 2.822 2 0 1.5-1.408 2-2.822 2-1.275 0-2.61-.5-3.678-1.5-1.068-1-2.062-1.5-3.678-1.5s-2.61.5-3.678 1.5C6.076 11.5 4.742 12 3.467 12 2.053 12 .645 11.5.645 10c0-1.5 1.408-2 2.822-2 1.275 0 2.61.5 3.678 1.5C8.213 10.5 9.207 11 10.822 11s2.61-.5 3.678-1.5c1.068-1 2.403-1.5 3.678-1.5z"/>
                </svg>
              )}
              {feature.icon === 'calendar' && (
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                  <line x1="16" y1="2" x2="16" y2="6"></line>
                  <line x1="8" y1="2" x2="8" y2="6"></line>
                  <line x1="3" y1="10" x2="21" y2="10"></line>
                </svg>
              )}
              {feature.icon === 'grid' && (
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <rect x="3" y="3" width="7" height="7"></rect>
                  <rect x="14" y="3" width="7" height="7"></rect>
                  <rect x="14" y="14" width="7" height="7"></rect>
                  <rect x="3" y="14" width="7" height="7"></rect>
                </svg>
              )}
              {feature.icon === 'monitor' && (
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
                  <line x1="8" y1="21" x2="16" y2="21"></line>
                  <line x1="12" y1="17" x2="12" y2="21"></line>
                </svg>
              )}
              {feature.icon === 'heart' && (
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                </svg>
              )}
              {feature.icon === 'zap' && (
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>
                </svg>
              )}
            </div>
            <h3 class="feature-title">{feature.title}</h3>
            <p class="feature-description">{feature.description}</p>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>


<style>
  .features {
    background: #0f172a;
  }

  .screenshots-section {
    padding: 6rem 0;
    background: linear-gradient(180deg, #0f172a 0%, #1e293b 100%);
  }

  .features-section {
    padding: 6rem 0;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .section-title {
    font-size: 2.5rem;
    font-weight: 800;
    color: white;
    text-align: center;
    margin-bottom: 1rem;
  }

  .section-subtitle {
    font-size: 1.25rem;
    color: rgba(255, 255, 255, 0.6);
    text-align: center;
    margin-bottom: 4rem;
  }


  /* Features Grid */
  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
  }

  .feature-card {
    padding: 2rem;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 16px;
    transition: all 0.3s;
  }

  .feature-card:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: #2196F3;
    transform: translateY(-4px);
    box-shadow: 0 20px 40px rgba(33, 150, 243, 0.2);
  }

  .feature-icon {
    width: 60px;
    height: 60px;
    background: linear-gradient(135deg, #2196F3 0%, #1976D2 100%);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1.5rem;
  }

  .feature-icon svg {
    width: 32px;
    height: 32px;
    color: white;
  }

  .feature-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: white;
    margin-bottom: 1rem;
  }

  .feature-description {
    font-size: 1rem;
    color: rgba(255, 255, 255, 0.7);
    line-height: 1.8;
  }

  @media (max-width: 768px) {
    .screenshots-section,
    .features-section {
      padding: 3rem 0;
    }

    .section-title {
      font-size: 2rem;
    }

    .section-subtitle {
      font-size: 1rem;
      margin-bottom: 2rem;
    }

    .features-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
  }
</style>
